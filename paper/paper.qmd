---
title: " Total Team Spending and Profitability Results in a Higher League Ranking in the English Premier League"
subtitle: "An Analysis of Economic Predictors on League Rank in the 2023-2024 Season"
author: 
  - Isabella MacLean
thanks: "Code and data are available at: https://github.com/Bellamaclean7/English_Premier_League_Economic
_Predictors_on_League_Rank_2023-2024_Season.git."
date: today
date-format: long
abstract: "This project investigates how to formulate a linear regression model based on three explanatory variables: match attendance, total payroll, and market value, in order to try and predict a teams finishing place in the standings. Utilizing R's lm function, this paper analyzes the relationship between these variables and teams total points accumulated during the English Premier League 2023-2024 season. Findings suggest that each explanatory variable significantly influences a team's league position (total points), highlighting the association between team success and team wealth."
format: pdf
toc: true
number-sections: true
bibliography: references.bib
---

```{r}
#| include: false
#| warning: false
#| message: false

library(tidyverse)
library(dplyr)
library(corrplot)
library(dplyr)
library(knitr)
library(readr)
library(here)
library(kableExtra)
library(scales)
library(ggplot2)
library(rstanarm)

analysis_data <- read_csv(here::here("data/analysis_data/analysis_data.csv"))
show_col_types = FALSE

matchday_attendance <- read_csv(here::here("data/raw_data/average_home_matchday_attendance_2023-2024.csv"))
show_col_types = FALSE

market_value <- read_csv(here::here("data/raw_data/market_value_2023-2024.csv"))
show_col_types = FALSE

team_rank <- read_csv(here::here("data/raw_data/team_rank_2023-2024.csv"))
show_col_types = FALSE

total_payroll <- read_csv(here::here("data/raw_data/total_payroll_2023-2024.csv"))
show_col_types = FALSE

total_transfer_spending <- read_csv(here::here("data/raw_data/total_transfer_spending_2023-2024.csv"))
show_col_types = FALSE
```


# Introduction

You can and should cross-reference sections and sub-sections. We use @citeR and @rohan.

The remainder of this paper is structured as follows. @sec-data....

You can and should cross-reference sections and sub-sections. We use @citeR and @rohan.

The remainder of this paper is structured as follows. @sec-data....

You can and should cross-reference sections and sub-sections. We use @citeR and @rohan.

The remainder of this paper is structured as follows. @sec-data....

You can and should cross-reference sections and sub-sections. We use @citeR and @rohan.

The remainder of this paper is structured as follows. @sec-data....

# Data {#sec-data}

The analysis dataset used for this paper is comprised of five datasets that were compiled during the data cleaning process. The first dataset, @tbl-1, contains every teams average home matchday attendance for the 2023-2024 season, which was collected from @footballwebpages2023premierleague. The second dataset, @tbl-2, contains every teams current market value, which was collected from @transfermarkt2023premierleague. The third dataset, @tbl-3, contains the current total payroll for each team in the English Premier League, and was collected from @spotrac2023eplpayroll. The forth dataset, @tbl-4, contains the total amount spent in transfer fees prior to the start of the 2023-2024 season for each team in the English Premier League, and was collected from @spotrac2023epltransferfees. The final dataset, @tbl-5, contains the total points earned by each team in the English Premier League during the 2023-2024 as of Matchday 30, and was retrieved from @transfermarkt2023premierleaguematchday30.

```{r}
#| label: tbl-1
#| tbl-cap: The dataset containing average home matchday attendance for each team in the English Premier League during the 2023-2024 season.
#| echo: false
#| warning: false

# Assigning new column names to the dataframe
colnames(matchday_attendance) <- c("Team", "Home Matchday Attendance")

# Ensure that the "Home Matchday Attendance" column is numeric for formatting
matchday_attendance$`Home Matchday Attendance` <- as.numeric(matchday_attendance$`Home Matchday Attendance`)

# Format the "Home Matchday Attendance" column to include commas
matchday_attendance$`Home Matchday Attendance` <- comma(matchday_attendance$`Home Matchday Attendance`)

# Generate the table with adjusted font size to fit the page
kable(matchday_attendance, booktabs = TRUE, align = c("l", rep("r", 6)), "latex", longtable = TRUE) |>
  kable_styling(latex_options = c("striped", "HOLD_position"), font_size = 8)
```

```{r, results='asis'}
#| label: tbl-2
#| tbl-cap: The dataset containing the current market value of each team in the English Premier League.
#| echo: false
#| warning: false

# Assigning new column names to the dataframe
colnames(market_value) <- c("Team", "Market Value")

# Function to format values in billions and millions
format_value <- function(value) {
  if (value >= 1) {
    # Value is in billions
    return(paste0("£", formatC(value, format = "f", digits = 2), "B"))
  } else {
    # Value is in millions
    # Convert to millions (e.g., 0.9 becomes 900)
    million_value <- value * 1000
    return(paste0("£", round(million_value), "M"))
  }
}

# Apply the function to every market value
market_value$`Market Value` <- sapply(market_value$`Market Value`, format_value)

# Generate the table with adjusted font size to fit the page
kable(market_value, booktabs = TRUE, align = c("l", rep("r", 6)), "latex", longtable = TRUE) |>
  kable_styling(latex_options = c("striped", "HOLD_position"), font_size = 8)
```

```{r}
#| label: tbl-3
#| tbl-cap: The dataset containing the current total payroll for each team in the English Premier League.
#| echo: false
#| warning: false

# Assigning new column names to the dataframe
colnames(total_payroll) <- c("Team", "Active Players", "Forwards", "Midfielders", "Defensmen", "Goalkeepers", "Total")

# Generate the table with adjusted font size to fit the page
kable(total_payroll, booktabs = TRUE, align = c("l", rep("r", 6)), "latex", longtable = TRUE) |>
  kable_styling(latex_options = c("striped", "HOLD_position"), font_size = 8)
```

```{r}
#| label: tbl-4
#| tbl-cap: The dataset containing the total amount spent in transfer fees prior to the start of the 2023-2024 season for each team in the English Premier League.
#| echo: false
#| warning: false

# Assigning new column names to the dataframe
colnames(total_transfer_spending) <- c("Team", "Total Transfer Fees")
                             
# Generate the table with adjusted font size to fit the page
kable(total_transfer_spending, booktabs = TRUE, align = c("l", rep("r", 6)), "latex", longtable = TRUE) |>
  kable_styling(latex_options = c("striped", "HOLD_position"), font_size = 8)
```

```{r}
#| label: tbl-5
#| tbl-cap: The dataset containing the total points earned by each team in the English Premier League during the 2023-2024 as of Matchday 30.
#| echo: false
#| warning: false

# Assigning new column names to the dataframe
colnames(team_rank) <- c("Team", "Points")
                             
# Generate the table with adjusted font size to fit the page
kable(team_rank, booktabs = TRUE, align = c("l", rep("r", 6)), "latex", longtable = TRUE) |>
  kable_styling(latex_options = c("striped", "HOLD_position"), font_size = 8)
```

The datasets were then combined during the cleaning process to create one master dataset for analysis. The merging process was conducted on the common column `team`, ensuring that data from each dataset corresponding to a specific team was consolidated into a single row within the analysis dataset. This methodology allowed for a unified view of each team's `matchday attendance`, `market value`, `total team points`, `total payroll`, and `total transfer spending`, facilitating a multifaceted analysis of team performance and financial metrics.

As part of the data cleaning process, specific columns containing numeric values but stored as character strings—due to the inclusion of commas as thousands separators and currency symbols—were converted to their appropriate numeric data types. This conversion involved stripping the character columns 'average_home_matchday_attendance', 'total_wage_bill', and 'transfer_fees' of non-numeric characters (i.e., commas and the pound sterling symbol) and then casting them to integer or numeric types as contextually appropriate, as well as applying the same scaling methods to each variable. This step was essential for enabling quantitative analysis of these variables.

Furthermore, to streamline the dataset and focus the analysis on key variables of interest, certain columns deemed extraneous to the core analytical objectives were removed. These included detailed payroll information per position (`forwards`, `midfielders`, `defensmen`, `goalkeepers`) and the column `active.players`. The removal of these columns served to reduce the dataset's complexity, facilitating a more focused and manageable analysis of the relationships between team performance metrics and financial expenditures.

The resulting dataset for analysis is shown in @tbl-6.

```{r}
#| label: tbl-6
#| tbl-cap: The dataset containing the total points earned by each team in the English Premier League during the 2023-2024 as of Matchday 30.
#| echo: false
#| warning: false

# Creating a temporary copy of the dataframe for table presentation
table_data <- analysis_data

# Specifying new column names for the table aesthetics
names(table_data) <- c("Team", "Home Matchday Attendance", "Market Value", "Points", "Total Payroll", "Total Transfer Fees")

# Generate the table with adjusted column names and font size
kable(table_data, booktabs = TRUE, align = c("l", rep("r", 6)), "latex", longtable = TRUE) |>
  kable_styling(latex_options = c("striped", "HOLD_position"), font_size = 8)
```

The analysis dataset has 6 columns:

1. The `Team` column, which denotes the name of each football club in the English Premier League.
2. The `Home Matchday Attendance` column, which denotes the average number of spectators attending home matches of the football club. This helps understand the club's popularity, fan base size, and infrastructure. 
3. The `Market Value` column, which represents the total market value of the team in billions of pounds. It indicates the financial strength and quality of the club.
4. The `Points` column, which represents the total points a team has accumulated over the season in the league. Points are awarded based on wins and draws. 
5. The `Total Payroll` column, which details the total annual wages paid by the club to its players, given in pounds. It reflects the financial commitment of the club towards its playing squad.
6. The `Total Transfer Fees` column, which denotes the total amount spent by the club on transfer fees in pounds during the transfer window for the given year. It indicates the club's investment in new players for the season.

From here I began examining the relationships between English Premier League teams' league performance (expressed in points accumulated) and various financial indicators during the 2023-2024 season. The following four graphs (@fig-pts_vs_average_home_matchday_attendance, @fig-pts_vs_total_wage_bill, @fig-pts_vs_market_value, and @fig-pts_vs_transfer_fees) presents a scatter plot paired with a linear regression trend line to evaluate the correlation between league points and one of the four key economic metrics presented in @tbl-6.

```{r fig.width=6,fig.height=3,fig.cap=8}
#| warning: false
#| echo: false
#| label: fig-pts_vs_average_home_matchday_attendance
#| fig-cap: Scatter plot illustrating the relationship between total league points and average matchday attendance during the 2023-2024 season.

# Calculate correlation coefficient for league position and average attendance
cor_attendance <- cor(analysis_data$pts, analysis_data$average_home_matchday_attendance, use = "complete.obs")

# Create a scatter plot for league position and average attendance
ggplot(analysis_data, aes(x = pts, y = average_home_matchday_attendance)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +
  theme_minimal() +
  theme(plot.title = element_text(size = 10),  
        plot.subtitle = element_text(size = 8),  
        axis.title.x = element_text(size = 8),
        axis.title.y = element_text(size = 8)
  ) +
  labs(title = "Average Matchday Attendance in Relation to League Position - 2023/2024 Season",
       subtitle = sprintf("Correlation coefficient: %.15f", cor_attendance),
       x = "Total League Points",
       y = "Average Attendance"
  )
```


```{r fig.width=6,fig.height=3,fig.cap=10}
#| warning: false
#| echo: false
#| label: fig-pts_vs_total_wage_bill
#| fig-cap: Scatter plot depicting the association between total league points and the total payroll for teams in the 2023-2024 season.

# Calculate correlation coefficient for league position and average total wages
cor_wages <- cor(analysis_data$pts, analysis_data$total_wage_bill, use = "complete.obs")

# Create a scatter plot for league position and average total wages
ggplot(analysis_data, aes(x = pts, y = total_wage_bill)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +
  theme_minimal() +
  theme(plot.title = element_text(size = 10),  
      plot.subtitle = element_text(size = 8),  
      axis.title.x = element_text(size = 8),  
      axis.title.y = element_text(size = 8)
  ) +
  labs(title = "Total Payroll in Relation to League Points - 2023/2024 Season",
       subtitle = paste("Correlation coefficient:", cor_wages),
       x = "Total League Points",
       y = "Total Payroll")
```

```{r fig.width=6,fig.height=3,fig.cap=10}
#| warning: false
#| echo: false
#| label: fig-pts_vs_market_value
#| fig-cap: Scatter plot demonstrating the correlation between the current market value of teams and their accumulated league points for the 2023-2024 season.

# Calculate correlation coefficient for league position and market value
cor_market <- cor(analysis_data$pts, analysis_data$market_value, use = "complete.obs")

# Create a scatter plot for league position and market value
ggplot(analysis_data, aes(x = pts, y = market_value)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +
  theme_minimal() +
  theme(plot.title = element_text(size = 10),  
    plot.subtitle = element_text(size = 8),  
    axis.title.x = element_text(size = 8),  
    axis.title.y = element_text(size = 8)
  ) +
  labs(title = "Current Market Value in Relation to League Points - 2023/2024 Season",
       subtitle = paste("Correlation coefficient:", cor_market),
       x = "Total League Points",
       y = "Total Market Value")
```


```{r fig.width=6,fig.height=3,fig.cap=10}
#| warning: false
#| echo: false
#| label: fig-pts_vs_transfer_fees
#| fig-cap: Scatter plot illustrating the relationship between teams total transfer spending and their corresponding league points for the 2023-2024 season. 
# Calculate correlation coefficient for league position and total transfer fees
cor_transfers <- cor(analysis_data$pts, analysis_data$transfer_fees, use = "complete.obs")

# Create a scatter plot for league position and average total wages
ggplot(analysis_data, aes(x = pts, y = transfer_fees)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +
  theme_minimal() +
  theme(plot.title = element_text(size = 10),  
    plot.subtitle = element_text(size = 8),  
    axis.title.x = element_text(size = 8),  
    axis.title.y = element_text(size = 8)
  ) +
  labs(title = "Average Transfer Spending in Relation to League Points - 2023/2024 Season",
       subtitle = paste("Correlation coefficient:", cor_transfers),
       x = "Total League Points",
       y = "Total Transfer Fees")
```

In @fig-pts_vs_average_home_matchday_attendance, @fig-pts_vs_total_wage_bill, @fig-pts_vs_market_value, and @fig-pts_vs_transfer_fees, each point point on the graph represents a team, plotted with their total points on the x-axis and their average home attendance on the y-axis. The trend line in @fig-pts_vs_average_home_matchday_attendance, added using linear regression analysis, suggests a correlation between team performance and matchday turnout. The correlation coefficient of 0.683116662462212 indicates a positive association with moderate correlation, where teams with higher league points tend to have greater average attendance. @fig-pts_vs_total_wage_bill linear regression trend line suggests a correlation between a team’s financial expenditure on payroll and their success in the league. A correlation coefficient of 0.788682340622421 reflects a positive relationship, implying that teams with higher payrolls may be more likely to accumulate greater league points. @fig-pts_vs_market_value demonstrates a pronounced upward trend represented by the linear regression line, with a correlation coefficient of 0.88165690596531, indicative of a strong positive relationship. This suggests that teams with higher market values tend to amass more league points, underlining a potential link between financial strength and on-field success. @fig-pts_vs_transfer_fees trend line indicates a moderate positive correlation, with a correlation coefficient of approximately 0.449012469460392. This suggests that higher league points tend to coincide with increased transfer spending, although the relationship is not strongly linear.

When running simple linear regression with `Points` ~ `Each Dependent Variable`, you're looking at the relationship between each variable in isolation with `Points`. The positive trend and strong correlation coefficients found in @fig-pts_vs_average_home_matchday_attendance, @fig-pts_vs_total_wage_bill, @fig-pts_vs_market_value when analyzed in isolation with `Points`, suggests that as `Market Value`, `Total Payroll`, and `Average Matchday Attendance` of a team increases (independently from each other), so do the points accumulated.

# Model

## Linear Regression

A linear regression model is a statistical model for linear relationships between variables given by

$$
Y_i = \beta_0 + \beta_1 X_{i,1} + \beta_2 X_{i,2} + \ldots + \beta_p X_{i,p} + \varepsilon_i \quad \text{for } i = 1, \ldots, n. \tag{1}
$$

As shown in equation (1) a linear regression model has the following components:

- $Y_i$: The dependent variable for the $i^{th}$ observation. This is the response variable that is trying to be predicted or explained, dependent on the corresponding explanatory variables $X_{i,1}, X_{i,2}, \ldots, X_{i,p}$.

- $\beta_0$: The intercept of the regression line. It represents the expected value of $Y_i$ when all the independent variables ($X$) are equal to 0.

- $\beta_1, \beta_2, \ldots, \beta_p$: The coefficients of the model. Each $\beta_j$ (for $j = 1, \ldots, p$) represents the expected change in $Y_i$ for a one-unit change in the $j^{th}$ independent variable, $X_{i,j}$, holding all other variables constant.

- $X_{i,1}, X_{i,2}, \ldots, X_{i,p}$: The independent variables (also called predictors or explanatory variables) for the $i^{th}$ observation. These variables are used to predict the value of the dependent variable.

- $\varepsilon_i$: The error term for the $i^{th}$ observation. It represents the difference between the observed value of the dependent variable and the value predicted by the model. It's assumed to be randomly distributed with a mean of 0.

- $i = 1, \ldots, n$: This indicates that the equation applies to each observation in the dataset, from the first ($i = 1$) to the $n^{th}$ (the last observation), where $n$ is the total number of observations.

## Model set-up
$$
\begin{split}
\text{pts}_i =\ &\beta_0 + \beta_1 \times \text{average\_home\_matchday\_attendance}_i \\
&+ \beta_2 \times \text{total\_wage\_bill}_i + \beta_3 \times \text{market\_value}_i + \varepsilon_i
\end{split}
\tag{2}
$$

Equation (2) can be explained as follows: 

- $\text{pts}_i$: The dependent variable for the $i^{th}$ observation. This is the outcome variable that the model is trying to predict or explain, which in this context could represent points (or any other metric of success) associated with each observation.

- $\beta_1, \beta_2, \beta_3$: The coefficients of the model. Each of these coefficients represents the expected change in $\text{pts}_i$ for a one-unit increase in their respective independent variable, assuming all other variables are held constant.
    - $\beta_1$ is associated with $\text{average\_home\_matchday\_attendance}_i$, indicating how changes in home matchday attendance are expected to affect $\text{pts}_i$.
    - $\beta_2$ corresponds to $\text{total\_wage\_bill}_i$, reflecting the impact of the total wage bill on $\text{pts}_i$.
    - $\beta_3$ is linked with $\text{market\_value}_i$, showing how the market value is predicted to influence $\text{pts}_i$.

## Model justification

The linear regression model given by Equation (2), derived from the foundational principles of linear regression outlined in Equation (1), provides a transparent mechanism to quantify the impact of various factors on the total points accumulated by EPL teams (a direct correlation to team rank in league standings). The model will aid in gaining insights into how attendance, total payroll, and market value could affect performance metrics. The model is operationalized using the `lm` function in `R`. A strong positive relationship is expected between the dependent variable (`Points`) and three independent variables (`Home Matchday Attendance`, `Total Payroll`, and `Market Value`). The higher the three independent variables are, the more points there should be accumulated by the team.

## Model Prediction

A positive relationship is hypothesized between the dependent variable (`Points`) and the three independent variables (`Home Matchday Attendance`, `Total Payroll`, and `Market Value`). The underlying assumption is that higher values for these independent variables should correlate with an increased number of points earned by a team. Such a correlation would suggest that greater fan engagement (as reflected in matchday attendance), higher investment in player talent (as indicated by the payroll), and a more substantial market presence (denoted by market value) are all strategic levers that could lead to better performance in the league.

# Results

@tbl-7 shows the table of the coefficients after running the linear model summary.
```{r}
#| echo: false
#| warning: false
#| include: false

model <- lm(pts ~ average_home_matchday_attendance + total_wage_bill + market_value, data = analysis_data)

# Display the summary of the model
model_summary <- summary(model)
print(model_summary)
```

```{r}
#| label: tbl-7
#| tbl-cap: Summary of Linear Model Coefficients
#| echo: false
#| warning: false

model_summary <- summary(model)
coefs <- data.frame(
  Estimate = model_summary$coefficients[, "Estimate"],
  StdError = model_summary$coefficients[, "Std. Error"],
  tValue = model_summary$coefficients[, "t value"],
  Pr = model_summary$coefficients[, "Pr(>|t|)"]
)

kable(coefs, booktabs = TRUE, align = c("l", rep("r", 6)), "latex", longtable = TRUE) |>
  kable_styling(latex_options = c("striped", "HOLD_position"), font_size = 10)

```

Note:
Residuals:
     Min       1Q   Median       3Q      Max 
-10.8121  -6.0644  -0.9837   5.1376  15.9644 

Residual standard error: 8.261 on 16 degrees of freedom
Multiple R-squared:  0.8057,	Adjusted R-squared:  0.7693 
F-statistic: 22.12 on 3 and 16 DF,  p-value: 6.159e-06

```{r}
#| label: tbl-8
#| tbl-cap: Actual vs Predicted Points for English Premier League Teams Based on Home Attendance, Wage Bill, and Market Value, Sorted by Current League Ranking in Descending Order
#| echo: false
#| warning: false

# Predict points using the model
analysis_data$predicted_pts <- predict(model, newdata = analysis_data)

# Display actual vs predicted points sorted by actual points descending
result_table <- analysis_data |> 
  select(team, pts, predicted_pts) |>
  arrange(desc(pts))

# Format table with LaTeX and apply additional styling
kable(result_table, booktabs = TRUE, align = c("l", rep("r", 6)), "latex", longtable = TRUE) |>
  kable_styling(latex_options = c("striped", "HOLD_position"), font_size = 10)
```

# Discussion

## First discussion point {#sec-first-point}

## Second discussion point

## Third discussion point

## Weaknesses and next steps

\newpage

\appendix

# Appendix {-}


# Additional data details

# Model details {#sec-model-details}

## Posterior predictive check

## Diagnostics

\newpage


# References


